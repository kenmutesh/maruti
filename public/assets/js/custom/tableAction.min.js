function prefillPurchaseOrderRow(selectElement){const optionSelected=selectElement.selectedOptions[0],itemRow=selectElement.closest("tr"),nameInput=itemRow.querySelector('input[name="item_name[]"]'),qtyInput=itemRow.querySelector('input[name="item_qty[]"]'),kgInput=itemRow.querySelector('input[name="item_kg[]"]'),typeInput=itemRow.querySelector('input[name="item_type[]"]'),vatInput=itemRow.querySelector('input[name="item_vat[]"]'),costWithoutVATInput=itemRow.querySelector('input[name="unit_cost_without_vat[]"]'),costWithVATInput=itemRow.querySelector('input[name="unit_cost_with_vat[]"]'),amountInput=itemRow.querySelector('input[name="amount[]"]');"Powder"==optionSelected.parentElement.label?(qtyInput.readOnly=!0,qtyInput.value=0,kgInput.readOnly=!1,kgInput.value=1,kgInput.min=0):(qtyInput.readOnly=!1,qtyInput.value=1,qtyInput.min=0,kgInput.readOnly=!0,kgInput.value=0),typeInput.value=optionSelected.parentElement.label,vatInput.value=optionSelected.getAttribute("attr-data-cost-vat"),costWithoutVATInput.value=optionSelected.getAttribute("attr-data-cost-without-vat"),costWithVATInput.value=optionSelected.getAttribute("attr-data-cost"),amountInput.value=optionSelected.getAttribute("attr-data-cost"),""!=optionSelected.getAttribute("attr-data-name")?nameInput.readOnly=!0:nameInput.readOnly=!1,nameInput.value=optionSelected.getAttribute("attr-data-name"),calculatePurchaseOrderGrandTotal()}function calculatePurchaseOrderItemRowTotal(inputElement){const itemRow=inputElement.closest("tr"),vatInput=itemRow.querySelector('input[name="item_vat[]"]'),costWithoutVATInput=itemRow.querySelector('input[name="unit_cost_without_vat[]"]'),costWithVATInput=itemRow.querySelector('input[name="unit_cost_with_vat[]"]'),amountInput=itemRow.querySelector('input[name="amount[]"]'),qtyInput=itemRow.querySelector('input[name="item_qty[]"]'),kgInput=itemRow.querySelector('input[name="item_kg[]"]');let units=0;if(units=qtyInput.readOnly?kgInput:qtyInput,"unit_cost_with_vat[]"==inputElement.name)costWithoutVATInput.value=parseFloat(inputElement.valueAsNumber/parseFloat((100+vatInput.valueAsNumber)/100)).toFixed(2);else{const vatAddition=parseFloat(costWithoutVATInput.valueAsNumber)*parseFloat(vatInput.valueAsNumber/100);costWithVATInput.value=parseFloat(parseFloat(costWithoutVATInput.valueAsNumber)+vatAddition).toFixed(2)}amountInput.value=parseFloat(costWithVATInput.valueAsNumber*units.valueAsNumber).toFixed(2),calculatePurchaseOrderGrandTotal()}function calculatePurchaseOrderGrandTotal(){const amountInputs=document.querySelectorAll('input[name="amount[]"'),grandTotal=[...amountInputs].reduce((previousValue,currentValue)=>parseFloat(parseFloat(previousValue)+parseFloat(currentValue.valueAsNumber)),0);document.querySelector('input[name="grand_total"]').value=parseFloat(grandTotal).toFixed(2)}function resetRow(btnElement){const inputs=btnElement.parentElement.parentElement.querySelectorAll("input"),selectElements=btnElement.parentElement.parentElement.querySelectorAll("select");[...inputs].forEach(input=>{input.value=""}),[...selectElements].forEach((selectElement,index)=>{selectElement.options[0].selected=!0})}function prefillItemRow(selectElement,inventory=!1,coating=!1,goodsWeight=!1){const optionSelected=selectElement.selectedOptions[0],itemRow=selectElement.closest("tr"),inventoryTypeInput=itemRow.querySelector('input[name="inventory_type[]"]'),itemIDInput=itemRow.querySelector('input[name="item_id[]"]'),nameInput=itemRow.querySelector('input[name="item_name[]"]'),codeInput=itemRow.querySelector('input[name="item_code[]"]'),descriptionInput=itemRow.querySelector('input[name="item_description[]"]'),qtyInput=itemRow.querySelector('input[name="item_qty[]"]'),kgInput=itemRow.querySelector('input[name="item_kg[]"]'),taxInput=itemRow.querySelector('input[name="item_tax[]"]'),unitInput=itemRow.querySelector('input[name="unit_cost[]"]'),amountInput=itemRow.querySelector('input[name="amount[]"]'),warehouseID=itemRow.querySelector('input[name="warehouse_id[]"]'),binID=itemRow.querySelector('input[name="bin_id[]"]');if(inventory){document.querySelector(".new-item")&&(document.querySelector(".new-item").value=null);let description=optionSelected.getAttribute("attr-data-description"),max=optionSelected.getAttribute("attr-current-quantity"),minThreshold=optionSelected.getAttribute("attr-min-threshold"),code=optionSelected.getAttribute("attr-data-code"),cost=optionSelected.getAttribute("attr-data-cost"),warehouse=optionSelected.getAttribute("attr-warehouse-id"),bin=optionSelected.getAttribute("attr-bin-id");inventoryTypeInput.value=optionSelected.parentElement.label,warehouseID.value=warehouse,binID.value=bin,"POWDER"==optionSelected.parentElement.label?(qtyInput.readOnly=!0,qtyInput.value=0,kgInput.readOnly=!1,kgInput.value=1,kgInput.max=max,kgInput.min=0):(qtyInput.readOnly=!1,qtyInput.value=1,qtyInput.max=max,qtyInput.min=0,coating&&qtyInput.setAttribute("attr-min-threshold",minThreshold),kgInput.readOnly=!0,kgInput.value=0),itemIDInput.value=selectElement.value,descriptionInput.value=description,codeInput.value=code,nameInput.value=optionSelected.getAttribute("attr-data-name"),unitInput.value=cost}else $((function(){$(selectElement).next().next().val("")})),inventoryTypeInput.value=optionSelected.value,"POWDER"==optionSelected.value?(qtyInput.readOnly=!0,qtyInput.value=0,kgInput.readOnly=!1,kgInput.value=1):(qtyInput.readOnly=!1,qtyInput.value=1,kgInput.readOnly=!0,kgInput.value=0),warehouseID.value="",binID.value="",itemIDInput.value="",descriptionInput.value="",codeInput.value="",nameInput.value="",unitInput.value=1,taxInput.value=1;if(goodsWeight){const goodWeight=6.4*parseFloat(optionSelected.getAttribute("attr-weight"))*qtyInput.value;kgInput.value=goodWeight}calculateItemRowTotal(selectElement)}function calculateItemRowTotal(inputElement,coating=!1,goodsWeight=!1){const itemRow=inputElement.closest("tr"),inventoryTypeInput=itemRow.querySelector('input[name="inventory_type[]"]'),qtyInput=itemRow.querySelector('input[name="item_qty[]"]'),kgInput=itemRow.querySelector('input[name="item_kg[]"]'),taxInput=itemRow.querySelector('input[name="item_tax[]"]'),unitInput=itemRow.querySelector('input[name="unit_cost[]"]'),amountInput=itemRow.querySelector('input[name="amount[]"]');let taxAddition;coating&&parseInt(qtyInput.max)-parseInt(qtyInput.value)<parseInt(qtyInput.getAttribute("attr-min-threshold"))&&swal({title:"Alert",text:"Alert! The quantity will lead to the item being below its minimum threshold of "+qtyInput.getAttribute("attr-min-threshold"),type:"error",timer:3e3,buttons:!1}),taxAddition=isNaN(parseFloat(taxInput.value))||0==parseFloat(taxInput.value)?1:parseFloat((parseFloat(taxInput.value)+parseFloat(100))/100);const taxedTotal=parseFloat(taxAddition*unitInput.value).toFixed(2);let finalAmount;if(finalAmount="POWDER"==inventoryTypeInput.value?parseFloat(taxedTotal*kgInput.value).toFixed(2):parseFloat(taxedTotal*qtyInput.value).toFixed(2),amountInput.value=finalAmount,goodsWeight){const goodWeight=6.4*parseFloat(itemRow.querySelector("select").selectedOptions[0].getAttribute("attr-weight"))*qtyInput.value;kgInput.value=goodWeight}updateGrandTotal()}function calculateDiscountItemRowTotal(inputElement,coating=!1,goodsWeight=!1){let discount=0;parseFloat(inputElement.value)>0&&(discount=parseFloat(inputElement.value));const itemRow=inputElement.closest("tr"),inventoryTypeInput=itemRow.querySelector('input[name="inventory_type[]"]'),qtyInput=itemRow.querySelector('input[name="item_qty[]"]'),kgInput=itemRow.querySelector('input[name="item_kg[]"]'),taxInput=itemRow.querySelector('input[name="item_tax[]"]'),unitInput=itemRow.querySelector('input[name="unit_cost[]"]'),amountInput=itemRow.querySelector('input[name="amount[]"]'),discountInput=itemRow.querySelector('input[name="discount_total[]"]');let taxAddition;coating&&parseInt(qtyInput.max)-parseInt(qtyInput.value)<parseInt(qtyInput.getAttribute("attr-min-threshold"))&&swal({title:"Alert",text:"Alert! The quantity will lead to the item being below its minimum threshold of "+qtyInput.getAttribute("attr-min-threshold"),type:"error",timer:3e3,buttons:!1}),taxAddition=isNaN(parseFloat(taxInput.value))||0==parseFloat(taxInput.value)?1:parseFloat((parseFloat(taxInput.value)+parseFloat(100))/100);const taxedTotal=parseFloat(taxAddition*(unitInput.value-discount)).toFixed(2);let finalAmount;if("POWDER"==inventoryTypeInput.value?(finalAmount=parseFloat(taxedTotal*kgInput.value).toFixed(2),discountInput.value=parseFloat(discount*kgInput.value).toFixed(2)):(finalAmount=parseFloat(taxedTotal*qtyInput.value).toFixed(2),discountInput.value=parseFloat(discount*qtyInput.value).toFixed(2)),amountInput.value=finalAmount,goodsWeight){const goodWeight=6.4*parseFloat(itemRow.querySelector("select").selectedOptions[0].getAttribute("attr-weight"))*qtyInput.value;kgInput.value=goodWeight}updateGrandTotal()}function updateGrandTotal(){const totalAmount=document.querySelectorAll('input[name="amount[]"]');let initialValue=0;const grandTotal=[...totalAmount].reduce((previousValue,currentValue)=>parseFloat(parseFloat(previousValue)+parseFloat(currentValue.value)),initialValue);document.querySelector('input[name="grand_total"]').value=parseFloat(grandTotal).toFixed(2);const totalDiscount=document.querySelectorAll('input[name="discount_total[]"]');initialValue=0;const discountTotal=[...totalDiscount].reduce((previousValue,currentValue)=>parseFloat(parseFloat(previousValue)+parseFloat(currentValue.value)),initialValue);document.querySelector('input[name="grand_total_discount"]')&&(document.querySelector('input[name="grand_total_discount"]').value=parseFloat(discountTotal).toFixed(2))}function updateGrandTotalCoating(){}function addItemRow(coating=!1){"function"==typeof $.fn.select2&&($(".search-select").select2("destroy"),$(".searchable-select").each((function(i,obj){$(obj).data("select2")&&$(obj).select2("destroy")}))),"function"==typeof $.fn.selectpicker&&$("select:not(.ms)").selectpicker("destroy");const tableBody=document.querySelector(".item-list"),itemListRow=tableBody.querySelector("tr"),clonedRow=itemListRow.cloneNode(!0),inputs=clonedRow.querySelectorAll("input"),selectElements=clonedRow.querySelectorAll("select");[...inputs].forEach(input=>{coating?"item_kg[]"!=input.name&&(input.value=""):input.value=""}),[...selectElements].forEach((selectElement,index)=>{selectElement.options[0].selected=!0}),tableBody.appendChild(clonedRow),setTimeout((function(){"function"==typeof $.fn.selectpicker&&$("select:not(.ms)").selectpicker()}),500),setTimeout((function(){"function"==typeof $.fn.selectpicker&&$("select:not(.ms)").selectpicker()}),500),setTimeout(()=>{$(".searchable-select").select2({placeholder:"Select an option"})},900)}function removeRow(btnElement){const tableBody=document.querySelector(".item-list"),itemListRow=tableBody.querySelectorAll("tr");itemListRow.length>1?btnElement.parentElement.parentElement.remove():resetRow(),updateGrandTotal()}function calculateEstimate(inputElement,owner=!1){const form=inputElement.form;let weight=form.goods_weight.value;const profile=form.profile_type.value;let result;switch(isNaN(weight)&&(weight=0),profile){case"Heavy":result=weight/28;break;case"Medium":result=weight/24;break;default:result=weight/20}form.powder_estimate.value=Math.ceil(result.toFixed(2)),owner&&document.querySelectorAll(".owner-kg").forEach(weightInput=>{weightInput.value=parseFloat(parseFloat(weight)+parseFloat(result)).toFixed(2);const changeEvent=new Event("change");weightInput.dispatchEvent(changeEvent)})}function prefillRALData(selectElement){const color=selectElement.selectedOptions[0].getAttribute("attr-data-color"),code=selectElement.selectedOptions[0].getAttribute("attr-data-code"),warehouseID=selectElement.selectedOptions[0].getAttribute("attr-warehouse-id"),binID=selectElement.selectedOptions[0].getAttribute("attr-bin-id");selectElement.form.color.value=color,selectElement.form.code.value=code,selectElement.form.ral_warehouse_id.value=warehouseID,selectElement.form.ral_bin_id.value=binID}function updateAmountOwnerUnits(inputElement){const tableRow=inputElement.parentElement.parentElement,total=tableRow.querySelector('input[name="amount[]"]'),itemKG=tableRow.querySelector('input[name="item_kg[]"]'),unitCost=tableRow.querySelector('input[name="unit_cost[]"]');total.value=parseFloat(itemKG.value*unitCost.value).toFixed(2),updateGrandTotal()}function changeItemAmount(inputElement,scaleUp=!1){let parent;parent=inputElement.parentElement.parentElement,scaleUp&&(parent=inputElement.parentElement.parentElement.parentElement);let sqMetres=1;parseFloat(parent.querySelector('input[name="sq_metre[]"]').value)>0&&(sqMetres=parent.querySelector('input[name="sq_metre[]"]').value);const unitCost=parent.querySelector('input[name="unit_cost[]"]').value,itemQty=parent.querySelector('input[name="item_qty[]"]').value;parent.querySelector('input[name="powder_estimate[]"]').value=parseFloat(sqMetres*itemQty/3).toFixed(2),parent.querySelector('input[name="amount[]"]').value=parseFloat(sqMetres*unitCost*itemQty).toFixed(2),updateTotalSteel()}function prefillArea(inputElement){const parent=inputElement.parentElement,length=parent.querySelector('input[name="item_length[]"]').value,width=parent.querySelector('input[name="item_width[]"]').value;parent.querySelector('input[name="sq_metre[]"]').value=parseFloat(length*width).toFixed(2);const event=new Event("change");parent.querySelector('input[name="sq_metre[]"]').dispatchEvent(event)}function toggleSizeActive(selectElement){"-"==selectElement.value?selectElement.nextElementSibling.disabled=!1:selectElement.nextElementSibling.disabled=!0}function toggleManualArea(checkbox){const parent=checkbox.parentElement.parentElement;checkbox.checked?(parent.querySelector('input[name="item_length[]"]').value=0,parent.querySelector('input[name="item_length[]"]').readOnly=!0,parent.querySelector('input[name="item_width[]"]').value=0,parent.querySelector('input[name="item_width[]"]').readOnly=!0,parent.querySelector('input[name="sq_metre[]"]').value=0,parent.querySelector('input[name="sq_metre[]"]').readOnly=!1):(parent.querySelector('input[name="item_length[]"]').value=0,parent.querySelector('input[name="item_length[]"]').readOnly=!1,parent.querySelector('input[name="item_width[]"]').value=0,parent.querySelector('input[name="item_width[]"]').readOnly=!1,parent.querySelector('input[name="sq_metre[]"]').value=0,parent.querySelector('input[name="sq_metre[]"]').readOnly=!0)}function updateTotalSteel(){const totalInput=document.querySelectorAll('input[name="amount[]"]'),values=[...totalInput].map(item=>item.value||0),grandTotal=values.reduce((total,current)=>isNaN(current)?parseFloat(parseFloat(total)+0).toFixed(2):parseFloat(parseFloat(total)+parseFloat(current)).toFixed(2));document.querySelector('input[name="grand_total"').value=grandTotal}function toggleCollapse(btnElement){const parent=btnElement.parentElement.parentElement;$(parent).find(".collapse").collapse("toggle")}function prefillItemRowSteel(selectElement){const optionSelected=selectElement.selectedOptions[0],itemRow=selectElement.parentElement.parentElement,inventoryTypeInput=itemRow.querySelector('input[name="inventory_type[]"]'),itemIDInput=itemRow.querySelector('input[name="item_id[]"]'),codeInput=itemRow.querySelector('input[name="item_code[]"]'),descriptionInput=itemRow.querySelector('input[name="item_description[]"]'),warehouseID=itemRow.querySelector('input[name="warehouse_id[]"]'),binID=itemRow.querySelector('input[name="bin_id[]"]');let description=optionSelected.getAttribute("attr-data-description"),max=optionSelected.getAttribute("attr-current-quantity"),minThreshold=optionSelected.getAttribute("attr-min-threshold"),code=optionSelected.getAttribute("attr-data-code"),cost=optionSelected.getAttribute("attr-data-cost"),warehouse=optionSelected.getAttribute("attr-warehouse-id"),bin=optionSelected.getAttribute("attr-bin-id");inventoryTypeInput.value="POWDER",warehouseID.value=warehouse,binID.value=bin,itemIDInput.value=selectElement.value,descriptionInput.value=description,codeInput.value=code}function prefillRowStockOut(selectElement){const itemRow=selectElement.closest("tr"),inventoryType=itemRow.querySelector('input[name="inventory_type[]"]'),itemName=itemRow.querySelector('input[name="item_name[]"]'),description=itemRow.querySelector('input[name="item_description[]"]'),itemSerial=itemRow.querySelector('input[name="item_serial[]"]'),warehouseID=itemRow.querySelector('input[name="warehouse_id[]"]'),binID=itemRow.querySelector('input[name="bin_id[]"]'),currentQuantity=itemRow.querySelector('input[name="current_quantity[]"]'),qty=itemRow.querySelector('input[name="item_qty[]"]'),selectedItem=selectElement.selectedOptions[0];inventoryType.value=selectedItem.parentElement.label,itemName.value=selectedItem.getAttribute("attr-data-name"),description.value=selectedItem.getAttribute("attr-data-description"),itemSerial.value=selectedItem.getAttribute("attr-data-serial"),currentQuantity.value=selectedItem.getAttribute("attr-data-level"),qty.value="1",qty.max=currentQuantity.value,warehouseID.value=selectedItem.getAttribute("attr-warehouse-id"),binID.value=selectedItem.getAttribute("attr-bin-id")}function prefillItemTransfer(selectElement,inventory=!1,coating=!1){const optionSelected=selectElement.selectedOptions[0],itemRow=selectElement.closest("tr"),itemIDInput=itemRow.querySelector('input[name="item_id[]"]'),inventoryTypeInput=itemRow.querySelector('input[name="inventory_type[]"]'),warehouseID=itemRow.querySelector('input[name="item_warehouse_id[]"]'),binID=itemRow.querySelector('input[name="item_bin_id[]"]'),nameInput=itemRow.querySelector('input[name="item_name[]"]'),codeInput=itemRow.querySelector('input[name="item_code[]"]'),unitInput=itemRow.querySelector('input[name="item_unit[]"]'),descriptionInput=itemRow.querySelector('input[name="item_description[]"]'),qtyInput=itemRow.querySelector('input[name="item_qty[]"]'),kgInput=itemRow.querySelector('input[name="item_kg[]"]');let description=optionSelected.getAttribute("attr-data-description"),unit=optionSelected.getAttribute("attr-data-unit"),max=optionSelected.getAttribute("attr-current-quantity"),minThreshold=optionSelected.getAttribute("attr-min-threshold"),code=optionSelected.getAttribute("attr-data-code"),warehouse=optionSelected.getAttribute("attr-warehouse-id"),bin=optionSelected.getAttribute("attr-bin-id");inventoryTypeInput.value=optionSelected.parentElement.label,warehouseID.value=warehouse,binID.value=bin,"POWDER"==optionSelected.parentElement.label?(qtyInput.readOnly=!0,qtyInput.value=0,kgInput.readOnly=!1,kgInput.value=1,kgInput.max=max):(qtyInput.readOnly=!1,qtyInput.value=1,kgInput.readOnly=!0,kgInput.value=0,qtyInput.max=max),itemIDInput.value=selectElement.value,descriptionInput.value=description,codeInput.value=code,unitInput.value=unit,nameInput.value=optionSelected.getAttribute("attr-data-name")}
//# sourceMappingURL=tableAction.min.js.map